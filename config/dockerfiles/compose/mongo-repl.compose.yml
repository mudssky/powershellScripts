version: '3.3'
services:
  mongo:
    image: mongo:6 # dockerhub
    container_name: mongo-repl-dev
    restart: always
    ports:
      - 37017:27017
    command: mongod --keyFile /data/mongodb.key --replSet rs0
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER:-root}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD:-12345678}
    volumes:
      - ${DOCKER_DATA_PATH:-../../docker_data}/mongo/data:/data/db
    entrypoint:
      - bash
      - -c
      - |
        openssl rand -base64 128 > /data/mongodb.key
        chmod 400 /data/mongodb.key
        chown 999:999 /data/mongodb.key
        echo 'const isInited = rs.status().ok === 1
        if(!isInited){
          rs.initiate({
              _id: "rs0",
              members: [
                  { _id: 0, host: "mongo:27017" }
              ]
          })
        }' > /data/initReplicaSet.js
        # 启动MongoDB服务
        exec docker-entrypoint.sh "$$@" &

        # 等待MongoDB服务启动
        until mongo -u ${MONGO_USER:-root} -p ${MONGO_PASSWORD:-12345678} --authenticationDatabase admin --eval "print('waited for connection')" > /dev/null 2>&1; do
          echo "Waiting for MongoDB to start..."
          sleep 2
        done

        # 执行初始化副本集的脚本
        mongo -u ${MONGO_USER:-root} -p ${MONGO_PASSWORD:-12345678} --authenticationDatabase admin /data/initReplicaSet.js

        # 等待docker-entrypoint.sh脚本执行的MongoDB服务进程
        wait $$!